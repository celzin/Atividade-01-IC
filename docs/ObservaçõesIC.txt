Observações:
- Os exercícios de 1 a 5 são sequênciais e dependem das etapas anteriores.
- O conjunto de dados de entrada é composto por uma tabela NxN onde cada linha representa um dado de entrada e cada coluna representa uma amostra.
- Se o sistema de taxa de amostragem é de 1 segundo, entraria 1 coluna a cada segundo.
- Não é comum ter funções de pertinência diferentes, mas nesse caso o conjunto de funções de pertinência pode ser diferente da entrada.
- A cada amostra que chega, será calculado o grau de pertinência. 
- A saída de cada uma sera o Mi_inicial ao Mi_final, ou seja a fuzzyficação.

Ideia de implementação:
- Func_triangularMF(X, A, B, C) return Mi
	begin
		Mi = max(min(...))
		// se X < A, Mi = 0
		// se X >= C, Mi = 0
		return Mi
	end
- Onde A é o limite inferior, B o Centro e C o limite superior.

- Informar quantas funções de pertinência temos.
- Cada regra possui um grau de ativação.

Importante:
- Não posso utilizar estrtururas prontas de linguagens, preciso criar o mais "na mão" possível. Os cálculos devem ser feito de modo "manual".
- Foque primeiramente na triangular, teste, valide.

- No final deve ser feito uma agregação e defuzificação.
- É mais fácil passar a função para uma variável do que um conjunto de variáveis.
